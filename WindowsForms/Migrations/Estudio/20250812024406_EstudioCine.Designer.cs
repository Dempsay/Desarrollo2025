// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WindowsForms.DataContex;

#nullable disable

namespace WindowsForms.Migrations.Estudio
{
    [DbContext(typeof(EstudioContext))]
    [Migration("20250812024406_EstudioCine")]
    partial class EstudioCine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WindowsForms.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Actores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Nombre = "Leonardo DiCaprio",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Nombre = "Meryl Streep",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Nombre = "Denzel Washington",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Nombre = "Tom Hanks",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 5,
                            Eliminado = false,
                            Nombre = "Scarlett Johansson",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 6,
                            Eliminado = false,
                            Nombre = "Brad Pitt",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 7,
                            Eliminado = false,
                            Nombre = "Natalie Portman",
                            PaisId = 2
                        },
                        new
                        {
                            Id = 8,
                            Eliminado = false,
                            Nombre = "Morgan Freeman",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 9,
                            Eliminado = false,
                            Nombre = "Robert De Niro",
                            PaisId = 1
                        },
                        new
                        {
                            Id = 10,
                            Eliminado = false,
                            Nombre = "Emma Stone",
                            PaisId = 1
                        });
                });

            modelBuilder.Entity("WindowsForms.Models.Estudio", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("id"));

                    b.Property<int?>("ActorId")
                        .HasColumnType("int");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("ActorId");

                    b.ToTable("Estudios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ActorId = 1,
                            Eliminado = false,
                            direccion = "4000 Warner Blvd, Burbank, CA, USA",
                            nombre = "Warner Bros."
                        },
                        new
                        {
                            id = 2,
                            ActorId = 2,
                            Eliminado = false,
                            direccion = "5555 Melrose Ave, Los Angeles, CA, USA",
                            nombre = "Paramount Pictures"
                        },
                        new
                        {
                            id = 3,
                            ActorId = 3,
                            Eliminado = false,
                            direccion = "100 Universal City Plaza, Universal City, CA, USA",
                            nombre = "Universal Pictures"
                        },
                        new
                        {
                            id = 4,
                            ActorId = 4,
                            Eliminado = false,
                            direccion = "10202 W Washington Blvd, Culver City, CA, USA",
                            nombre = "Columbia Pictures"
                        },
                        new
                        {
                            id = 5,
                            ActorId = 5,
                            Eliminado = false,
                            direccion = "10201 W Pico Blvd, Los Angeles, CA, USA",
                            nombre = "20th Century Studios"
                        },
                        new
                        {
                            id = 6,
                            ActorId = 6,
                            Eliminado = false,
                            direccion = "Pinewood Rd, Iver Heath, Buckinghamshire, UK",
                            nombre = "Pinewood Studios"
                        },
                        new
                        {
                            id = 7,
                            ActorId = 7,
                            Eliminado = false,
                            direccion = "August-Bebel-Str. 26-53, 14482 Potsdam, Alemania",
                            nombre = "Studio Babelsberg"
                        },
                        new
                        {
                            id = 8,
                            ActorId = 8,
                            Eliminado = false,
                            direccion = "30 Avenue Charles de Gaulle, 92200 Neuilly-sur-Seine, Francia",
                            nombre = "Gaumont Film Company"
                        },
                        new
                        {
                            id = 9,
                            ActorId = 9,
                            Eliminado = false,
                            direccion = "Via Tuscolana, 1055, 00173 Roma RM, Italia",
                            nombre = "Cinecittà"
                        },
                        new
                        {
                            id = 10,
                            ActorId = 10,
                            Eliminado = false,
                            direccion = "1-2-2 Yurakucho, Chiyoda City, Tokio, Japón",
                            nombre = "Toho Co., Ltd."
                        });
                });

            modelBuilder.Entity("WindowsForms.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("WindowsForms.Models.PaisActor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Nombre = "Estados Unidos"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Nombre = "Reino Unido"
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Nombre = "Alemania"
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Nombre = "Francia"
                        },
                        new
                        {
                            Id = 5,
                            Eliminado = false,
                            Nombre = "Italia"
                        },
                        new
                        {
                            Id = 6,
                            Eliminado = false,
                            Nombre = "España"
                        },
                        new
                        {
                            Id = 7,
                            Eliminado = false,
                            Nombre = "Japón"
                        },
                        new
                        {
                            Id = 8,
                            Eliminado = false,
                            Nombre = "Canadá"
                        },
                        new
                        {
                            Id = 9,
                            Eliminado = false,
                            Nombre = "Australia"
                        },
                        new
                        {
                            Id = 10,
                            Eliminado = false,
                            Nombre = "México"
                        });
                });

            modelBuilder.Entity("WindowsForms.Models.Actor", b =>
                {
                    b.HasOne("WindowsForms.Models.PaisActor", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("WindowsForms.Models.Estudio", b =>
                {
                    b.HasOne("WindowsForms.Models.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId");

                    b.Navigation("Actor");
                });
#pragma warning restore 612, 618
        }
    }
}
